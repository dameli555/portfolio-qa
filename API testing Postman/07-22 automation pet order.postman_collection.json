{
	"info": {
		"_postman_id": "14d2f45f-a7f5-4835-82fd-5557e8cad25a",
		"name": "07-22 automation pet order",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23312632"
	},
	"item": [
		{
			"name": "positive test",
			"item": [
				{
					"name": "place an order for a pets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response Time is less than 0.5s\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"});",
									"pm.test(\"Response Size is less than 1KB\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1024);",
									"});",
									"pm.test(\"Header is correct\", function () {",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json\");",
									"    pm.response.to.have.header(\"Transfer-Encoding\",\"chunked\");",
									"    pm.response.to.have.header(\"Connection\",\"keep-alive\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\",\"*\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\",\"GET, POST, DELETE, PUT\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\",\"Content-Type, api_key, Authorization\");",
									"    pm.response.to.have.header(\"Server\",\"Jetty(9.2.9.v20150224)\");",
									"});",
									"pm.test(\"Body contains KEYS\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    pm.expect(pm.response.text()).to.include(\"petId\");",
									"    pm.expect(pm.response.text()).to.include(\"quantity\");",
									"    pm.expect(pm.response.text()).to.include(\"shipDate\");",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"    pm.expect(pm.response.text()).to.include(\"complete\");",
									"});",
									"pm.test(\"Keys and Value is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(7);",
									"    pm.expect(jsonData.petId).to.eql(77);",
									"    pm.expect(jsonData.quantity).to.eql(777);",
									"    pm.expect(jsonData.status).to.eql(\"placed\");",
									"    pm.expect(jsonData.complete).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.clear()",
									"",
									"pm.environment.set(\"ID\", Math.floor(Math.random() * 101))",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{ID}},\n    \"petId\": 77,\n    \"quantity\": 777,\n    \"shipDate\": \"2022-09-13T00:48:26.030Z\",\n    \"status\": \"placed\",\n    \"complete\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "find purches order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 0.5s \", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"});",
									"",
									"pm.test(\"Response Size is less than 1KB \", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1024);",
									"});",
									"",
									"pm.test(\"Header is correct\", function () {",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json\");",
									"    pm.response.to.have.header(\"Transfer-Encoding\",\"chunked\");",
									"    pm.response.to.have.header(\"Connection\",\"keep-alive\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\",\"*\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\",\"GET, POST, DELETE, PUT\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\",\"Content-Type, api_key, Authorization\");",
									"    pm.response.to.have.header(\"Server\",\"Jetty(9.2.9.v20150224)\");",
									"});",
									"",
									"pm.test(\"Body contains KEYS\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    pm.expect(pm.response.text()).to.include(\"petId\");",
									"    pm.expect(pm.response.text()).to.include(\"quantity\");",
									"    pm.expect(pm.response.text()).to.include(\"shipDate\");",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"    pm.expect(pm.response.text()).to.include(\"complete\");",
									"});",
									"pm.test(\"Keys and Value is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(7);",
									"    pm.expect(jsonData.petId).to.eql(77);",
									"    pm.expect(jsonData.quantity).to.eql(777);",
									"    pm.expect(jsonData.status).to.eql(\"placed\");",
									"    pm.expect(jsonData.complete).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/{{ID}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"{{ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete purchase by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 0.5s\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"});",
									"",
									"pm.test(\"Response Size is less than 1KB\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1024);",
									"});",
									"",
									"pm.test(\"Header is correct\", function () {",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json\");",
									"    pm.response.to.have.header(\"Transfer-Encoding\",\"chunked\");",
									"    pm.response.to.have.header(\"Connection\",\"keep-alive\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\",\"*\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\",\"GET, POST, DELETE, PUT\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\",\"Content-Type, api_key, Authorization\");",
									"    pm.response.to.have.header(\"Server\",\"Jetty(9.2.9.v20150224)\");",
									"});",
									"",
									"pm.test(\"Body contains KEYS\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"code\");",
									"    pm.expect(pm.response.text()).to.include(\"type\");",
									"    pm.expect(pm.response.text()).to.include(\"message\");",
									"    });",
									"",
									"pm.test(\"Keys and Value is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(200);",
									"    pm.expect(jsonData.type).to.eql(\"unknown\");",
									"    pm.expect(jsonData.message).to.eql(\"7\");",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/{{ID}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"{{ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative test",
			"item": [
				{
					"name": "place an order for a pets - wrong ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response Time is less than 0.5s\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"});",
									"pm.test(\"Response Size is less than 1KB\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1024);",
									"});",
									"pm.test(\"Header is correct\", function () {",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json\");",
									"    pm.response.to.have.header(\"Transfer-Encoding\",\"chunked\");",
									"    pm.response.to.have.header(\"Connection\",\"keep-alive\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\",\"*\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\",\"GET, POST, DELETE, PUT\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\",\"Content-Type, api_key, Authorization\");",
									"    pm.response.to.have.header(\"Server\",\"Jetty(9.2.9.v20150224)\");",
									"});",
									"pm.test(\"Body contains KEYS\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    pm.expect(pm.response.text()).to.include(\"petId\");",
									"    pm.expect(pm.response.text()).to.include(\"quantity\");",
									"    pm.expect(pm.response.text()).to.include(\"shipDate\");",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"    pm.expect(pm.response.text()).to.include(\"complete\");",
									"});",
									"pm.test(\"Keys and Value is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(7);",
									"    pm.expect(jsonData.petId).to.eql(77);",
									"    pm.expect(jsonData.quantity).to.eql(777);",
									"    pm.expect(jsonData.status).to.eql(\"placed\");",
									"    pm.expect(jsonData.complete).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": -3,\n    \"petId\": 77,\n    \"quantity\": 777,\n    \"shipDate\": \"2022-09-13T00:48:26.030Z\",\n    \"status\": \"placed\",\n    \"complete\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "find purches order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response time is less than 0.5s \", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"});",
									"",
									"pm.test(\"Response Size is less than 1KB \", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1024);",
									"});",
									"",
									"pm.test(\"Header is correct\", function () {",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json\");",
									"    pm.response.to.have.header(\"Transfer-Encoding\",\"chunked\");",
									"    pm.response.to.have.header(\"Connection\",\"keep-alive\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\",\"*\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\",\"GET, POST, DELETE, PUT\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\",\"Content-Type, api_key, Authorization\");",
									"    pm.response.to.have.header(\"Server\",\"Jetty(9.2.9.v20150224)\");",
									"});",
									"",
									"pm.test(\"Body contains KEYS\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"code\");",
									"    pm.expect(pm.response.text()).to.include(\"type\");",
									"    pm.expect(pm.response.text()).to.include(\"message\");",
									"});",
									"pm.test(\"Keys and Value is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(1);",
									"    pm.expect(jsonData.type).to.eql(\"error\");",
									"    pm.expect(jsonData.message).to.eql(\"Order not found\");",
									"   ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/-3",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete purchase by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response time is less than 0.5s\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"});",
									"",
									"pm.test(\"Response Size is less than 1KB\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1024);",
									"});",
									"",
									"pm.test(\"Header is correct\", function () {",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json\");",
									"    pm.response.to.have.header(\"Transfer-Encoding\",\"chunked\");",
									"    pm.response.to.have.header(\"Connection\",\"keep-alive\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\",\"*\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\",\"GET, POST, DELETE, PUT\");",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\",\"Content-Type, api_key, Authorization\");",
									"    pm.response.to.have.header(\"Server\",\"Jetty(9.2.9.v20150224)\");",
									"});",
									"",
									"pm.test(\"Body contains KEYS\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"code\");",
									"    pm.expect(pm.response.text()).to.include(\"type\");",
									"    pm.expect(pm.response.text()).to.include(\"message\");",
									"    });",
									"",
									"pm.test(\"Keys and Value is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(404);",
									"    pm.expect(jsonData.type).to.eql(\"unknown\");",
									"    pm.expect(jsonData.message).to.eql(\"Order Not Found\");",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/-3",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"-3"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}